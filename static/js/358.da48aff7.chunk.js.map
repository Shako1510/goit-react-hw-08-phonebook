{"version":3,"file":"static/js/358.da48aff7.chunk.js","mappings":"qSAEaA,EAAMC,EAAAA,EAAAA,IAAH,sGAOHC,EAAQD,EAAAA,EAAAA,GAAH,wGAOLE,EAAYF,EAAAA,EAAAA,EAAH,0EAMTG,EAAOH,EAAAA,EAAAA,KAAH,8NAYJI,EAAQJ,EAAAA,EAAAA,MAAH,uFAMLK,EAAQL,EAAAA,EAAAA,MAAH,mRAgBLM,EAASN,EAAAA,EAAAA,OAAH,yuB,SChDJ,SAASO,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAC5B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAeC,EAAAA,EAAAA,MACfC,GAAkBD,EAAAA,EAAAA,MAGlBE,EAAoB,SAACC,GACvB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACJ,IAAK,QACD,OAAOT,EAASU,GACpB,IAAK,WACD,OAAOR,EAAYQ,GACvB,QACI,OAEX,EAaD,OAEI,UAAC1B,EAAD,YACI,SAACE,EAAD,6BACCS,IAAW,SAACR,EAAD,sDACZ,UAACC,EAAD,CAAMuB,SAdO,SAACJ,GAClBA,EAAEK,iBACFnB,GAASoB,EAAAA,EAAAA,IAAM,CAAEd,MAAAA,EAAOE,SAAAA,KACxBD,EAAS,IACTE,EAAY,GACf,EASO,WACI,UAACb,EAAD,oBACI,SAACC,EAAD,CACIwB,KAAK,QACLL,KAAK,QACLM,MAAM,4BACNC,UAAQ,EACRC,SAAUX,EACVI,MAAOX,EACPmB,GAAIf,EACJgB,YAAY,sBAIpB,UAAC9B,EAAD,uBACI,SAACC,EAAD,CACIwB,KAAK,WACLL,KAAK,WACLO,UAAQ,EACRC,SAAUX,EACVI,MAAOT,EACPiB,GAAIb,EACJc,YAAY,iBAGpB,SAAC5B,EAAD,CAAQuB,KAAK,SAAb,wBAKf,CC1Ec,SAASM,IACpB,OACI,4BACK,SAAC5B,EAAD,KACD,SAAC,KAAD,MAGX,C,wDCTM,IAkBIY,EAAS,eAACiB,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACP,EAAIQ,GAWvD,OARER,IAFFQ,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["components/Login/LoginFormStyled.jsx","components/Login/LoginForm.jsx","pages/login/LoginPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Div = styled.div`\ntext-align: center;\nwidth: 400px;\nmargin-left: auto;\nmargin-right: auto; \n`;\n\nexport const Title = styled.h1`\ncolor: #343545;\nfont-size: 32px;\nline-height: 1.17;\nletter-spacing: 0.01em;\n`;\n\nexport const ErrorText = styled.p`\nfont-size: 24px;\nfont-weight: 700;\ncolor: red;\n`;\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\nwidth: 360px;\npadding: 16px;\nfont-size: 16px;\nline-height: 1.17;\nletter-spacing: 0.01em;\nborder: 2px solid rgba(33, 33, 33, 0.2);\nborder-radius: 8px;\n`;\n\nexport const Label = styled.label`\nfont-size: 18px;\nline-height: 1.17;\nletter-spacing: 0.01em;\n`\n\nexport const Input = styled.input`\nmin-width: 300px;\nmargin: 0;\npadding: 12px 15px 12px 42px;\nfont-size: 14px;\ncolor: inherit;\nborder: 1px solid;\nborder-color: rgba(33, 33, 33, 0.2);\nborder-radius: 4px;\noutline: transparent;\n&:hover,\n&:focus-within {\nborder-color: blue;\n}\n`;\n\nexport const Button = styled.button`\n   \n    display: inline-block;\n    padding: 10px 5px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 16px;\n    min-width: 151px;\n   \n  \n    border-radius: 8px;   \n    border: 0;\n    box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.15);\n   \n   font-weight: 700;\n   font-size: 16px;\n   line-height: 1.17;\n   letter-spacing: 0.06em;\n   text-align: center;\n   background-color: rgba(33, 150, 243, 1);\n   color: rgba(255, 255, 255, 1);\n   cursor: pointer;\n   transition-property: background;\n   transition-duration: 250ms;\n   transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n   &:hover,\n   &:focus {\n       background-color: rgba(24, 140, 232, 1);\n       color: inherit;\n    }\n`;","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { nanoid } from 'nanoid';\nimport { login } from '../../redux/operation';\nimport { getErrorAuth } from \"redux/selectors\";\nimport { Form, Input, Button, Label, Div, Title, ErrorText } from \"./LoginFormStyled\";\n\n\nexport default function LoginForm() {\n    const dispatch = useDispatch();\n    const isError = useSelector(getErrorAuth)\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const emailInputId = nanoid();\n    const passwordInputId = nanoid();\n\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n        switch (name) {\n            case \"email\":\n                return setEmail(value);\n            case \"password\":\n                return setPassword(value);\n            default:\n                return;\n        }\n    };\n\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(login({ email, password }));\n        setEmail('');\n        setPassword('');\n    };\n\n\n\n    return (\n\n        <Div>\n            <Title>Please log in </Title>\n            {isError && <ErrorText>Oops, something went wrong, try again!</ErrorText>}\n            <Form onSubmit={handleSubmit}>\n                <Label>Email\n                    <Input\n                        type=\"email\"\n                        name=\"email\"\n                        title=\"For example user@mail.com\"\n                        required\n                        onChange={handleInputChange}\n                        value={email}\n                        id={emailInputId}\n                        placeholder=\"user@mail.com\"\n                    />\n                </Label>\n\n                <Label>Password\n                    <Input\n                        type=\"password\"\n                        name=\"password\"\n                        required\n                        onChange={handleInputChange}\n                        value={password}\n                        id={passwordInputId}\n                        placeholder=\"Password\"\n                    />\n                </Label>\n                <Button type=\"submit\">Login</Button>\n            </Form>\n        </Div>\n\n    )\n}","import { Outlet } from \"react-router-dom\";\nimport LoginForm from \"components/Login/LoginForm\";\n\nexport default function LoginPage() {\n    return (\n        <div>\n            {<LoginForm />}\n            <Outlet />\n        </div>\n    )\n};","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["Div","styled","Title","ErrorText","Form","Label","Input","Button","LoginForm","dispatch","useDispatch","isError","useSelector","getErrorAuth","useState","email","setEmail","password","setPassword","emailInputId","nanoid","passwordInputId","handleInputChange","e","target","name","value","onSubmit","preventDefault","login","type","title","required","onChange","id","placeholder","LoginPage","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}